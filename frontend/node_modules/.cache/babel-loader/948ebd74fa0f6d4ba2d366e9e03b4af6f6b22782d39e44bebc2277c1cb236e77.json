{"ast":null,"code":"var _jsxFileName = \"/home/vishvijay/Desktop/Cyberpidia/frontend/src/pages/PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PasswordReset() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [newPass, setNewPass] = useState('');\n  const [step, setStep] = useState(1);\n  const request = async e => {\n    e.preventDefault();\n    await axios.post(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/request-reset`, {\n      email\n    });\n    setStep(2);\n    alert('OTP sent if email exists');\n  };\n  const reset = async e => {\n    e.preventDefault();\n    await axios.post(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/reset-password`, {\n      email,\n      otp,\n      newPassword: newPass\n    });\n    alert('Password reset if OTP valid');\n    setStep(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: request,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: reset,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New password\",\n        value: newPass,\n        onChange: e => setNewPass(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordReset, \"xlFiPmkSbybKvGlmswiGNbOL22o=\");\n_c = PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PasswordReset","_s","email","setEmail","otp","setOtp","newPass","setNewPass","step","setStep","request","e","preventDefault","post","process","env","REACT_APP_API_URL","alert","reset","newPassword","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["/home/vishvijay/Desktop/Cyberpidia/frontend/src/pages/PasswordReset.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function PasswordReset(){\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [newPass, setNewPass] = useState('');\n  const [step, setStep] = useState(1);\n\n  const request = async (e) => {\n    e.preventDefault();\n    await axios.post(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/request-reset`, { email });\n    setStep(2);\n    alert('OTP sent if email exists');\n  };\n\n  const reset = async (e) => {\n    e.preventDefault();\n    await axios.post(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/reset-password`, { email, otp, newPassword: newPass });\n    alert('Password reset if OTP valid');\n    setStep(1);\n  };\n\n  return (\n    <div style={{ padding:20 }}>\n      <h2>Password Reset</h2>\n      {step === 1 ? (\n        <form onSubmit={request}>\n          <input placeholder=\"Your email\" value={email} onChange={e=>setEmail(e.target.value)} />\n          <button type=\"submit\">Send OTP</button>\n        </form>\n      ) : (\n        <form onSubmit={reset}>\n          <input placeholder=\"OTP\" value={otp} onChange={e=>setOtp(e.target.value)} />\n          <input type=\"password\" placeholder=\"New password\" value={newPass} onChange={e=>setNewPass(e.target.value)} />\n          <button type=\"submit\">Reset Password</button>\n        </form>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}